version: '3.9'
services:
  app:
    container_name: drone-manager-app
    build:
      dockerfile: Dockerfile
    image: drone-manager-app:latest
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASS}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8080/rest/v1/health | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    container_name: drone-manager-db
    image: postgres:16-alpine
    user: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  db-data: